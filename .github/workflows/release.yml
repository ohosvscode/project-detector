name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        settings:
          - host: macos-latest
            target: x86_64-apple-darwin
            build: pnpm build --target x86_64-apple-darwin
          - host: macos-latest
            target: aarch64-apple-darwin
            build: pnpm build --target aarch64-apple-darwin
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            build: pnpm build --target x86_64-pc-windows-msvc
          - host: windows-latest
            target: i686-pc-windows-msvc
            build: pnpm build --target i686-pc-windows-msvc
          - host: windows-latest
            target: aarch64-pc-windows-msvc
            build: pnpm build --target aarch64-pc-windows-msvc
          - host: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            build: pnpm build --target x86_64-unknown-linux-gnu --use-napi-cross
          - host: ubuntu-latest
            target: x86_64-unknown-linux-musl
            build: pnpm build --target x86_64-unknown-linux-musl -x
          - host: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            build: pnpm build --target aarch64-unknown-linux-gnu --use-napi-cross
          - host: ubuntu-latest
            target: aarch64-unknown-linux-musl
            build: pnpm build --target aarch64-unknown-linux-musl -x
          - host: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            build: pnpm build --target armv7-unknown-linux-gnueabihf --use-napi-cross
          - host: ubuntu-latest
            target: aarch64-unknown-linux-ohos
            build: pnpm build --target aarch64-unknown-linux-ohos -x
          - host: ubuntu-latest
            target: aarch64-linux-android
            build: pnpm build --target aarch64-linux-android --use-napi-cross
          - host: ubuntu-latest
            target: x86_64-unknown-freebsd
            build: pnpm build --target x86_64-unknown-freebsd --use-napi-cross

    name: Build - ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}

    steps:
      - uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.settings.target }}

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: ${{ matrix.settings.target }}-cargo-${{ matrix.settings.host }}

      - name: Setup toolchain
        run: ${{ matrix.settings.setup }}
        if: ${{ matrix.settings.setup }}
        shell: bash

      - name: Build
        run: ${{ matrix.settings.build }}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-${{ matrix.settings.target }}
          path: dist/*.node
          if-no-files-found: error

  build-wasm:
    name: Build - wasm32-wasip1-threads
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-wasip1-threads

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            .cargo-cache
            target/
          key: wasm32-wasip1-threads-cargo-ubuntu-latest

      - name: Build
        run: pnpm build --target wasm32-wasip1-threads

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-wasm32-wasip1-threads
          path: dist/*.wasm
          if-no-files-found: error

  universal-macOS:
    name: Build universal macOS binary
    needs:
      - build
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Download macOS x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-x86_64-apple-darwin
          path: artifacts

      - name: Download macOS arm64 artifact
        uses: actions/download-artifact@v4
        with:
          name: bindings-aarch64-apple-darwin
          path: artifacts

      - name: Combine binaries
        run: pnpm universal

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: bindings-universal-apple-darwin
          path: dist/*.node
          if-no-files-found: error

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs:
      - build
      - build-wasm
      - universal-macOS

    steps:
      - uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Move artifacts
        run: pnpm artifacts

      - name: List packages
        run: ls -R ./npm
        shell: bash

      - name: Publish
        run: |
          npm config set provenance true
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

